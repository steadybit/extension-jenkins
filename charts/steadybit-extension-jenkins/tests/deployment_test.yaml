templates:
  - deployment.yaml
chart:
  appVersion: v0.0.0
tests:
  - it: manifest should match snapshot without TLS
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot using podAnnotations and Labels
    set:
      podAnnotations:
        some-annotation: "some-annotation-value"
      podLabels:
        some-label: "some-label-value"
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with TLS
    set:
      tls:
        server:
          certificate:
            fromSecret: server-cert
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with mutual TLS
    set:
      tls:
        server:
          certificate:
            fromSecret: server-cert
        client:
          certificates:
            fromSecrets:
              - client-cert-a
              - client-cert-a
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with mutual TLS using containerPaths
    set:
      tls:
        server:
          certificate:
            path: /etc/tls/server.crt
            key:
              path: /etc/tls/server.key
        client:
          certificates:
            paths:
              - /etc/tls/ca.crt
              - /etc/tls/ca2.crt
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with extra env vars
    set:
      extraEnv:
        - name: FOO
          value: "bar"
      extraEnvFrom:
       - configMapRef:
         name: env-configmap
       - secretRef:
         name: env-secrets
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with extra labels
    set:
      extraLabels:
        tags.datadoghq.com/service: steadybit-extension
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with podSecurityContext
    set:
      podSecurityContext:
        runAsUser: 2222
    asserts:
      - matchSnapshot: {}

  - it: manifest should match snapshot with priority class
    set:
      priorityClassName: my-priority-class
    asserts:
      - matchSnapshot: {}

  - it: manifest should match snapshot with required values
    set:
      jenkins.baseUrl: https://jenkins.example.com
      jenkins.apiToken: 1234567890abcdef1234567890abcdef12345678
      jenkins.apiUser: daniel
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with insecureSkipVerify enabled
    set:
      jenkins:
        baseUrl: "https://jenkins.example.com"
        apiUser: "user"
        apiToken: "token"
        insecureSkipVerify: true
    asserts:
      - matchSnapshot: { }
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: STEADYBIT_EXTENSION_INSECURE_SKIP_VERIFY
            value: "true"
  - it: manifest should match snapshot with custom certificates using extraVolumes and extraVolumeMounts
    set:
      extraVolumeMounts:
        - name: extra-certs
          mountPath: /etc/ssl/extra-certs
          readOnly: true
      extraVolumes:
        - name: extra-certs
          configMap:
            name: jenkins-self-signed-ca
      extraEnv:
        - name: SSL_CERT_DIR
          value: /etc/ssl/extra-certs:/etc/ssl/certs
    asserts:
      - matchSnapshot: { }
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: extra-certs
            mountPath: /etc/ssl/extra-certs
            readOnly: true
      - contains:
          path: spec.template.spec.volumes
          content:
            name: extra-certs
            configMap:
              name: jenkins-self-signed-ca
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SSL_CERT_DIR
            value: /etc/ssl/extra-certs:/etc/ssl/certs
